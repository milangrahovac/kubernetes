1. Inspect the environment and identify the authorization modes configured on the cluster.
Check the kube-apiserver settings.

cat /etc/kubernetes/manifests/kube-apiserver.yaml 
ps -aux | grep authorization
result:     - --authorization-mode=Node,RBAC


kubectl get roles --all-namespaces --no-headers | wc -l

4. What are the resources the kube-proxy role in the kube-system namespace is given access to?
kubectl describe role kube-proxy -n kube-system


7. Which account is the kube-proxy role assigned to?
kubectl describe rolebindings kube-proxy -n kube-system

8.  Can user dev-user list pods in the default namespace.
kubectl auth can-i list pods --as dev-user -n default

9.Create the necessary roles and role bindings required for the dev-user to create, list and delete pods in the default namespace.

Use the given spec:
Role: developer
Role Resources: pods
Role Actions: list
Role Actions: create
Role Actions: delete
RoleBinding: dev-user-binding
RoleBinding: Bound to dev-user


kubectl create role developer --verb=list,create,delete --resource=pods
kubectl create rolebinding dev-user-binding --role=developer --user=dev-user 

10. A set of new roles and role-bindings are created in the blue namespace for the dev-user. 
However, the dev-user is unable to get details of the dark-blue-app pod in the blue namespace. 
Investigate and fix the issue.
We have created the required roles and rolebindings, but something seems to be wrong.

kubectl get pod dark-blue-app --as dev-user -n blue
kubectl get roles -n blue
kubectl describe role developer -n blue
kubectl get rolebindings -n blue
kubectl describe rolebindings dev-user-binding  -n blue
k edit role developer -n blue 
kubectl get pod dark-blue-app --as dev-user -n blue


11. Add a new rule in the existing role developer to grant the dev-user permissions 
to create deployments in the blue namespace.
Remember to add api group "apps".

kubectl auth can-i create deployment --as dev-user --namespace blue
k edit role developer -n blue 
kubectl describe role developer -n blue



apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: "2024-12-28T19:36:14Z"
  name: developer
  namespace: blue
  resourceVersion: "3318"
  uid: 94fa955d-f732-4686-bd9c-d194989967d6
rules:
- apiGroups:
  - ""
  resourceNames:
  - blue-app
  - dark-blue-app
  resources:
  - pods
  verbs:
  - get
  - watch
  - create
  - delete
- apiGroups:
  - "apps"
  resources:
  - deployments
  verbs:
  - get
  - watch
  - create
  - delete